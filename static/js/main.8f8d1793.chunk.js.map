{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/corona.jpg","images/loremipsum.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","backgroundColor","fill","barChart","option","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","image2","corona","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f8d1793.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2G39H\",\"card\":\"Cards_card__3HXqi\",\"infected\":\"Cards_infected__2b4kc\",\"recovered\":\"Cards_recovered__1Q40D\",\"deaths\":\"Cards_deaths__1debT\"};","import React from 'react';\r\nimport {Card,CardContent,Typography,Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards=({data: { confirmed,recovered,deaths,lastUpdate}})=>{\r\n    if(!confirmed){\r\n        return 'Loading.....';\r\n    }\r\n  \r\n    return(\r\n     <div className={styles.container}>\r\n        <Grid container spacing={3} justify=\"center\">\r\n\r\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                    <Typography variant=\"h5\"><CountUp\r\n                        start={0}\r\n                        end={confirmed.value}\r\n                        duration={3.5}\r\n                        separator=\",\"\r\n                    /></Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant =\"body2\">Number of active cases of COVID -19</Typography>\r\n                </CardContent>\r\n\r\n            </Grid>\r\n     \r\n\r\n\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                    <Typography variant=\"h5\"><CountUp\r\n                        start={0}\r\n                        end={recovered.value}\r\n                        duration={3.5}\r\n                        separator=\",\"\r\n                    /></Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant =\"body2\">Number of recovered cases from COVID -19</Typography>\r\n                </CardContent>\r\n\r\n            </Grid>\r\n      \r\n\r\n\r\n   <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                    <Typography variant=\"h5\"><CountUp\r\n                        start={0}\r\n                        end={deaths.value}\r\n                        duration={3.5}\r\n                        separator=\",\"\r\n                    />\r\n\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant =\"body2\">Number of death cases of COVID -19</Typography>\r\n                </CardContent>\r\n\r\n            </Grid>\r\n      </Grid>\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\n export const fetchData = async (country) => {\r\n     let changeableUrl=url;\r\n\r\n     if(country){\r\n         changeableUrl=`${url}/countries/${country}`;\r\n     }\r\n     try {\r\n    const {data:{confirmed,recovered,deaths,lastUpdate}} = await axios.get(changeableUrl);\r\n        return{confirmed,recovered,deaths,lastUpdate};\r\n\r\n    \r\n} catch (error) {\r\n    console.log(error);\r\n    \r\n} \r\n}\r\nexport const fetchDailyData= async () =>{\r\n    try{\r\n        const {data}= await axios.get(`${url}/daily`);\r\n        // return data.map(({confirmed,deaths,reportDate:date})=>({confirmed:confirmed.total,deaths:deaths.total,date}));\r\n        const modifiedData=data.map((dailyData)=>({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths:dailyData.deaths.total,\r\n            date:dailyData.reportDate,\r\n        }));\r\n        return modifiedData;\r\n    }catch (error){\r\n       return(error);\r\n    }\r\n}\r\nexport const fetchCountries = async() =>{\r\n    try{\r\n        const {data:{countries}}= await axios.get(`${url}/countries`);\r\n       return countries.map((country)=>country.name);\r\n    }catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n","import React,{useEffect,useState} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line,Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n// import { lightBlue } from '@material-ui/core/colors';\r\n\r\nconst Chart=({data:{confirmed, deaths , recovered },country})=>{\r\n    const [dailyData,setDailyData] = useState([]);\r\n\r\n\r\nuseEffect(()=>{\r\n    const fetchAPI = async()=>{\r\n       setDailyData(await fetchDailyData());\r\n    }\r\n\r\n\r\n\r\n    fetchAPI();\r\n},[]) ;\r\n\r\nconst lineChart=(\r\n    dailyData.length\r\n    ?(\r\n    <Line\r\n        data={{\r\n            labels:dailyData.map(({date})=>date),\r\n            datasets:[{\r\n                data:dailyData.map(({confirmed})=>confirmed),\r\n                label:'Infected',\r\n                borderColor:'#3333ff',\r\n                backgroundColor:'grey',\r\n                fill:true,\r\n            },{\r\n                data:dailyData.map(({deaths})=>deaths),\r\n                label:'deaths',\r\n                borderColor:'red',\r\n                backgroundColor:'rgba(255,0,0,0.5)',\r\n                fill:true,\r\n            }],\r\n        }}\r\n    />):null\r\n\r\n);\r\nconsole.log(confirmed,recovered,deaths);\r\n\r\nconst barChart=(\r\n    confirmed\r\n    ?(\r\n        <Bar\r\n    data={{\r\n        labels:['Infected', 'Recovered', 'Deaths'],\r\n        datasets:[{\r\n            label:'People',\r\n            backgroundColor:[\r\n                'blue',\r\n                'green',\r\n                'red',\r\n            ],\r\n            data:[confirmed.value,recovered.value,deaths.value],\r\n        }]\r\n    }}\r\n    option={{\r\n        legend:{display:false},\r\n        title:{display:true ,text:`Current state in ${country}`},\r\n    }}\r\n\r\n        />\r\n\r\n    ):null\r\n);\r\n\r\n\r\n    return(\r\n       <div className={styles.container}>\r\n        {country?barChart:lineChart}\r\n       </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Chart;","import React,{useState,useEffect} from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api';\r\nconst CountryPicker=({handleCountryChange})=>{\r\n\r\n\r\n        const [fetchedCountries,setFetchedCountries] = useState([]);\r\n\r\n        useEffect(()=>{\r\n            const fetchAPI=async ()=>{\r\n                setFetchedCountries(await fetchCountries());\r\n            }\r\n            fetchAPI();\r\n        },[setFetchedCountries]);\r\n        // console.log(fetchedCountries);\r\n      \r\n\r\n    \r\n    return(\r\n      <FormControl className={styles.FormControl}>\r\n          <NativeSelect defaultValue=\"\" onChange={(e)=>(handleCountryChange(e.target.value))}>\r\n              <option value=\"\">Global</option>\r\n              {fetchedCountries.map((country,i)=> <option key={i} value={country}>{country}</option>)}\r\n          </NativeSelect>\r\n      </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\n\nimport {Cards,Chart,CountryPicker} from './components';\n\nimport styles from './App.module.css';\nimport {fetchData} from './api';\nimport coronaImage from './images/corona.jpg';\nimport corona from './images/loremipsum.png';\n\n\n\n\nclass App extends React.Component {\n  state={\n    data:{},\n    country:'',\n  }\n  async componentDidMount (){\n    const fetchedData = await fetchData();\n    this.setState({data:fetchedData})\n }\n   handleCountryChange = async (country)=>{\n\n   const fetchedData=await fetchData(country);\n     this.setState({data:fetchedData,country:country});\n     console.log(fetchedData);\n\n   }\n  render(){\n    const {data,country} =this.state;\n    return(\n\n      <div className={styles.container}>\n      <img className={styles.image} src={coronaImage} alt=\"Covid-19\"/>\n      <br/>\n      <h1>COVID-19</h1>\n      \n        <Cards data={data}/>\n        <CountryPicker handleCountryChange={this.handleCountryChange}/>\n        <img className={styles.image2} src={corona} alt=\"\"/>\n        <Chart data={data} country={country}/>\n   \n      </div>\n\n    )\n    \n  }\n  \n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App/>,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__laz7S\",\"image\":\"App_image__18vrX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3JYN3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1JO27\"};","module.exports = __webpack_public_path__ + \"static/media/corona.9faca7c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/loremipsum.8c0e7c46.png\";"],"sourceRoot":""}